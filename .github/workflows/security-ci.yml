name: Security CI (bWAPP)

on:
  push:
    branches:
      - develop
      - "feature/**"
  pull_request:
    branches:
      - develop

jobs:
  dependency-check:
    name: Dependency Check (OWASP)
    runs-on: ubuntu-latest
    container: owasp/dependency-check
    steps:
      - uses: actions/checkout@v3
      - name: Run Dependency Check
        run: |
          dependency-check.sh --project "bWAPP" --scan "./" --format "HTML"
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  sast-phpstan:
    name: SAST (PHPStan)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install PHPStan
        run: composer global require phpstan/phpstan
      - name: Run PHPStan
        run: |
          ~/.composer/vendor/bin/phpstan analyse . --error-format=json > phpstan-report.json || true
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: phpstan-report
          path: phpstan-report.json

  secrets-scan:
    name: Secrets Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          report-format: json
          output: gitleaks-report.json
        continue-on-error: true
      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  dast-owasp-zap:
    name: DAST (OWASP ZAP)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: OWASP ZAP Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: "https://your-bwapp-instance.com"
          artifact_name: zap-report
